//? Autoincrement config
use("incidencias");
db.createCollection("counters");
db.counters.insertMany([
    { counter: "incidencesId", sequence_value: 0 },
    { counter: "cityId", sequence_value: 0 },
    { counter: "addressId", sequence_value: 0 }
]);
const autoIncrement = (collection) => {
    const sequenceDocument =  db.counters.findOneAndUpdate(
       { counter: `${collection}Id`},
       { $inc: { sequence_value: 1 }},
       { returnDocument: "after" }
    )
    return sequenceDocument.sequence_value;
}

use("incidencias");
//? Incidences
db.createCollection("incidences", {
    validator: {
        $jsonSchema: {
            bsonType: "object",
            additionalProperties: false,
            required: ["id_user", "equipment", "place", "area", "status", "priority", "category", "start_date", "end_date", "description"],
            properties: {
                _id: {
                    bsonType: "objectId"
                },
                id: {
                    bsonType: "int",
                },
                id_user: {
                    bsonType: "int",
                    description: "id_user is required. Must be a int"
                },
                equipment: {
                    bsonType: "string",
                    pattern: "^[a-zA-Z ]+$",
                    description: "equipment is required. Must be a string"
                },
                place: {
                    bsonType: "string",
                    enum: ["Artemis", "Apolo", "Sputnik", "Bathrooms", "Hunters", "Corvus"],
                    description: "place is required. Must be a string"
                },
                area: {
                    bsonType: "string",
                    enum: ["Technical", "Social", "Recreation", "Administrative", "Human Resources", "Financial"],
                    description: "area is required. Must be a string"
                },
                status: {
                    bsonType: "string",
                    enum: ["New", "In Progress", "Resolved"],
                    description: "status is required. Must be a string"
                },
                priority: {
                    bsonType: "string",
                    enum: ["Low", "Medium", "High"],
                    description: "priority is required. Must be a string"
                },
                category: {
                    bsonType: "string",
                    enum: ["Hardware", "Software", "Services", "Other"],
                    description: "category is required. Must be a string"
                },
                start_date: {
                    bsonType: "date",
                    description: "start_date is required. Must be a date"
                },
                end_date: {
                    bsonType: "date",
                    description: "end_date is required. Must be a date"
                },
                description: {
                    bsonType: "string",
                    pattern: "^[a-zA-Z ]+$",
                    description: "description is required. Must be a string"
                }
            }
        }
    }
})
db.incidences.insertMany([
    {
        id: autoIncrement("incidences"),
        id_user: 1,
        equipment: "Computer",
        place: "Artemis",
        area: "Technical",
        status: "In Progress",
        priority: "Low",
        category: "Hardware",
        start_date: new Date("2023-01-01"),
        end_date: new Date("2023-01-09"),
        description: "Computadora nueva"
    },
    {
        id: autoIncrement("incidences"),
        id_user: 1,
        equipment: "Laptop",
        place: "Apolo",
        area: "Technical",
        status: "New",
        priority: "Low",
        category: "Software",
        start_date: new Date("2023-01-05"),
        end_date: new Date("2023-01-25"),
        description: "Laptop nueva"
    },
    {
        id: autoIncrement("incidences"),
        id_user: 1,
        equipment: "Monitor",
        place: "Bathrooms",
        area: "Social",
        status: "In Progress",
        priority: "High",
        category: "Services",
        start_date: new Date("2023-04-01"),
        end_date: new Date("2023-05-09"),
        description: "Monitor nueva"
    },
    {
        id: autoIncrement("incidences"),
        id_user: 1,
        equipment: "Printer",
        place: "Hunters",
        area: "Recreation",
        status: "Resolved",
        priority: "Medium",
        category: "Other",
        start_date: new Date("2023-02-01"),
        end_date: new Date("2023-02-11"),
        description: "Impresora nueva"
    }
]);


//? User
db.createCollection("user", {
    validator: {
        $jsonSchema: {
            bsonType: "object",
            additionalProperties: false,
            required: ["discord_id", "username", "email", "id_address"],
            properties: {
                _id: {
                    bsonType: "objectId"
                },
                discord_id: {
                    bsonType: "string"
                },
                username: {
                    bsonType: "string"
                },
                email: {
                    bsonType: "string",
                    pattern: "^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$",
                    description: "email is required. Must be a string"
                },
                id_address: {
                    bsonType: "int",
                    description: "id_address is required. Must be a int"
                },
                guilds: {
                    bsonType: "array"
                },
                allowances: {
                    bsonType: "object",
                    description: "Insert permissions",
                    properties: {
                        "/api": {
                            bsonType: "array",
                            items: {
                                bsonType: "string",
                                description: "Insert specific version"
                            }
                        }
                    }
                }

            }
        }
    }
})
db.user.insertMany([
    {
        discord_id: "732340090168410113",
        username: "angel_vlk",
        email: "angel@example.com",
        id_address: 2
    }
])


//? City
db.createCollection("city", {
    validator: {
        $jsonSchema: {
            bsonType: "object",
            additionalProperties: false,
            required: ["id", "name"],
            properties: {
                _id: {
                    bsonType: "objectId"
                },
                id: {
                    bsonType: "int",
                },
                
                name: {
                    bsonType: "string",
                    pattern: "^[a-zA-Z ]+$",
                    description: "name is required. Must be a string"
                }
            }
        }
    }
});
db.city.insertMany([
    {
        id: autoIncrement("city"),
        name: "Bogota"
    },
    {
        id: autoIncrement("city"),
        name: "Medellin"
    },
    {
        id: autoIncrement("city"),
        name: "Cali"
    }
])


//? Address 
db.createCollection("address", {
    validator: {
        $jsonSchema: {
            bsonType: "object",
            additionalProperties: false,
            required: ["id", "id_city", "street", "number"],
            properties: {
                _id: {
                    bsonType: "objectId"
                },
                id: {
                    bsonType: "int",
                },
                id_city: {
                    bsonType: "int",
                },
                street: {
                    bsonType: "string",
                    pattern: "^[a-zA-Z 0-9]+$",
                    description: "street is required. Must be a string"
                },
                number: {
                    bsonType: "int",
                    description: "number is required. Must be a int"
                }
            }
        }
    }
});
db.address.insertMany([
    {
        id: autoIncrement("address"),
        id_city: 1,
        street: "Calle 123",
        number: 123
    },
    {
        id: autoIncrement("address"),
        id_city: 2,
        street: "Calle 456",
        number: 456
    }
])





